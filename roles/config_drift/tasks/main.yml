---
- name: Initialize drift detection variables
  set_fact:
    timestamp: "{{ ansible_date_time.iso8601 | default(now().strftime('%Y-%m-%dT%H:%M:%SZ')) | regex_replace(':', '-') }}"
    backup_date: "{{ ansible_date_time.date | default(now().strftime('%Y-%m-%d')) }}"

- name: Create local backup directory
  file:
    path: "{{ backup_directory }}/{{ backup_date }}"
    state: directory
  delegate_to: localhost
  run_once: true
  when: perform_backup | bool

- name: Create reports directory
  file:
    path: "{{ report_directory }}"
    state: directory
  delegate_to: localhost
  run_once: true

- name: Retrieve baseline configurations
  include_tasks: retrieve_baseline.yml
  run_once: true

- name: Process each device for drift detection
  include_tasks: drift_detection.yml

- name: Aggregate all drift results
  set_fact:
    drift_results: "{{ hostvars | dict2items | map(attribute='value.device_result') | select('defined') | list + (hostvars['localhost'].drift_results | default([])) }}"
  delegate_to: localhost
  run_once: true

- name: Perform remediation if enabled and drift detected
  include_tasks: remediate_config.yml
  when: 
    - perform_remediation | bool
    - overall_device_drift | bool

- name: Generate comprehensive reports
  include_tasks: generate_report.yml
  run_once: true
  when: drift_results is defined and drift_results | length > 0